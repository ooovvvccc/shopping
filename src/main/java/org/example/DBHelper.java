package org.example;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.List;
import java.util.ArrayList;
import java.sql.PreparedStatement;

public class DBHelper {public static final String DB_URL = "jdbc:sqlite:shopping.db";public static final String ADMIN_TABLE = "admin";public static final String USER_TABLE = "user";public static final String PRODUCT_TABLE = "product";public static final String CART_TABLE = "cart";public static final String HISTORY_TABLE = "history";public Connection conn;public Statement stmt;public ResultSet rs;public DBHelper() {try {Class.forName("org.sqlite.JDBC");conn = DriverManager.getConnection(DB_URL);stmt = conn.createStatement();createTables();} catch (ClassNotFoundException | SQLException e) {e.printStackTrace();}}private void createTables() throws SQLException {String sql1 = "CREATE TABLE IF NOT EXISTS " + ADMIN_TABLE + " ("+ "id INTEGER PRIMARY KEY,"+ "username TEXT NOT NULL UNIQUE,"+ "password TEXT NOT NULL"+ ");";String sql2 = "CREATE TABLE IF NOT EXISTS " + USER_TABLE + " ("+ "id INTEGER PRIMARY KEY,"+ "username TEXT NOT NULL UNIQUE,"+ "password TEXT NOT NULL,"+ "email TEXT NOT NULL,"+ "phoneNumber TEXT NOT NULL,"+ "registerTime TEXT NOT NULL,"+ "level TEXT NOT NULL"+ ");";String sql3 = "CREATE TABLE IF NOT EXISTS " + PRODUCT_TABLE + " ("+ "id INTEGER PRIMARY KEY,"+ "name TEXT NOT NULL UNIQUE,"+ "price REAL NOT NULL,"+ "stock INTEGER NOT NULL"+ ");";String sql4 = "CREATE TABLE IF NOT EXISTS " + CART_TABLE + " ("+ "user_id INTEGER NOT NULL,"+ "product_id INTEGER NOT NULL,"+ "quantity INTEGER NOT NULL,"+ "FOREIGN KEY (user_id) REFERENCES " + USER_TABLE + "(id),"+ "FOREIGN KEY (product_id) REFERENCES " + PRODUCT_TABLE + "(id),"+ "PRIMARY KEY (user_id, product_id)"+ ");";String sql5 = "CREATE TABLE IF NOT EXISTS " + HISTORY_TABLE + " ("+ "user_id INTEGER NOT NULL,"+ "product_id INTEGER NOT NULL,"+ "quantity INTEGER NOT NULL,"+ "total REAL NOT NULL,"+ "date TEXT NOT NULL,"+ "FOREIGN KEY (user_id) REFERENCES " + USER_TABLE + "(id),"+ "FOREIGN KEY (product_id) REFERENCES " + PRODUCT_TABLE + "(id)"+ ");";stmt.executeUpdate(sql1);stmt.executeUpdate(sql2);stmt.executeUpdate(sql3);stmt.executeUpdate(sql4);stmt.executeUpdate(sql5);}public Connection getConnection() {return conn;}public void close() {try {if (rs != null) {rs.close();}if (stmt != null) {stmt.close();}if (conn != null) {conn.close();}} catch (SQLException e) {e.printStackTrace();}}public List<Item> getAllItems() {List<Item> items = new ArrayList<>(); String sql = "SELECT * FROM " + PRODUCT_TABLE; try {PreparedStatement ps = conn.prepareStatement(sql); rs = ps.executeQuery(); while (rs.next()) { int id = rs.getInt("id"); String name = rs.getString("name"); double price = rs.getDouble("price");int stock = rs.getInt("stock");Item item = new Item(id, name, price, stock);items.add(item);}} catch (SQLException e) {e.printStackTrace();}return items;}public void insertAdmin(Admin admin) {String sql = "INSERT INTO " + ADMIN_TABLE + "(username, password) VALUES (?, ?)";try {PreparedStatement ps = conn.prepareStatement(sql);ps.setString(1, admin.getUsername());ps.setString(2, admin.getPassword());ps.executeUpdate();} catch (SQLException e) {e.printStackTrace();}}}